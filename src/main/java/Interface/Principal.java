/*
Álvaro Domingues de Freitas     Matrícula: 201876007
 */
package Interface;

import javax.swing.JOptionPane;
import Perfis.*;
import Programa.*;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tpalvaro -- Janela principal, onde tudo é executado
 */
public class Principal extends javax.swing.JFrame {
    
    ConjuntoSeries series;
    ConjuntoUsuarios usuarios;
    ConjuntoADM adms;
    Usuario perfilU;
    Administrador perfilADM;
    Usuario perfilAtivoU;
    Administrador perfilAtivoADM;
    Serie s;
    Serie serie;
    Episodio ep;
    Temporada temp;
    BancoDeUsuarios bancoU;
    BancoDeADM bancoADM;
    BancoDeSeries bancoS;

    /**
     * Creates new form JanelaLogin
     */
    public Principal() {
        initComponents();
        perfilAtivoU=null;
        perfilAtivoADM=null;
        series = new ConjuntoSeries();
        usuarios = new ConjuntoUsuarios();
        adms = new ConjuntoADM();
        bancoU = new BancoDeUsuarios(usuarios);
        bancoADM = new BancoDeADM(adms);
        bancoS = new BancoDeSeries(series);
        jLabel4.setVisible(false);
        jLabel1.setVisible(false);
        botaoAddSerie.setVisible(false);
        botaoEditaSerie.setVisible(false);
        botaoSegue.setVisible(false);
        botaoDropa.setVisible(false);
        botaoPesquisa.setVisible(false);
        botaoAssistir.setVisible(false);
        botaoProx.setVisible(false);
        
        

        try {
            usuarios = bancoU.pegaArquivo();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        try {
            adms = bancoADM.pegaArquivo();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        try {
            series = bancoS.pegaArquivo();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        botaoAddPerfil = new javax.swing.JButton();
        labelNick = new javax.swing.JLabel();
        labelNome = new javax.swing.JLabel();
        labelNumSeries = new javax.swing.JLabel();
        labelNumEps = new javax.swing.JLabel();
        labelNumHoras = new javax.swing.JLabel();
        labelBio = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        curioLivro = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        curioFilme = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        curioCalorias = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        botaoLogin = new javax.swing.JButton();
        botaoExcluiPerfil = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        botaoAddSerie = new javax.swing.JButton();
        botaoEditaSerie = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        areaTitulo = new javax.swing.JLabel();
        areaNumS = new javax.swing.JLabel();
        duracaoSeguidores = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        autor1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        autor2 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        autor3 = new javax.swing.JLabel();
        areaNota = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        areaSinopse = new javax.swing.JTextArea();
        botaoPesquisa = new javax.swing.JButton();
        botaoSegue = new javax.swing.JButton();
        botaoProx = new javax.swing.JButton();
        botaoAssistir = new javax.swing.JButton();
        botaoDropa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplicação Java");
        setResizable(false);

        botaoAddPerfil.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        botaoAddPerfil.setText("ADICIONAR PERFIL");
        botaoAddPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAddPerfilActionPerformed(evt);
            }
        });

        labelNick.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        labelNick.setText("Nenhum Perfil Ativo");

        labelNome.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        labelNome.setText("-");

        labelNumSeries.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelNumSeries.setText("-");

        labelNumEps.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelNumEps.setText("-");

        labelNumHoras.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelNumHoras.setText("-");

        labelBio.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelBio.setText("-");

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel8.setText("Enquanto Isso...");

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel9.setText("Esse tempo é equivalente a: ");

        jLabel10.setText("Ler um livro de");

        curioLivro.setText("-");

        jLabel2.setText("páginas.");

        jLabel3.setText("Ver toda a Saga Senhor dos Anéis");

        curioFilme.setText("-");

        jLabel5.setText("vezes.");

        jLabel6.setText("Queimar");

        curioCalorias.setText("-");

        jLabel11.setText("calorias em caminhadas.");

        botaoLogin.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        botaoLogin.setText("ENTRAR");
        botaoLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLoginActionPerformed(evt);
            }
        });

        botaoExcluiPerfil.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        botaoExcluiPerfil.setText("EXCLUIR PERFIL");
        botaoExcluiPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluiPerfilActionPerformed(evt);
            }
        });

        jLabel7.setText(" ");

        jLabel12.setText(" ");

        jLabel13.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelBio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelNome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelNick, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoAddPerfil, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelNumEps, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(labelNumHoras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelNumSeries, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoExcluiPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(curioFilme, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(curioLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(botaoLogin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(curioCalorias, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel11))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNick, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(curioLivro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelNumSeries, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(curioFilme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelNumEps, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(curioCalorias, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelNumHoras, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelBio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botaoExcluiPerfil, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(botaoLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoAddPerfil, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane5.addTab("PERFIL", jPanel1);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nickname", "Num. Séries"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel1.setText("ESTA AREA É RESERVADA AOS ADM's");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(346, 346, 346))
        );

        jTabbedPane5.addTab("PERFIS", jPanel4);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Nº Episodios", "Nº Seguidores", "Popularidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel4.setText("ESTA AREA É RESERVADA AOS ADM's");

        botaoAddSerie.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        botaoAddSerie.setText("ADICIONAR SÉRIES");
        botaoAddSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAddSerieActionPerformed(evt);
            }
        });

        botaoEditaSerie.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        botaoEditaSerie.setText("EDITAR SÉRIE");
        botaoEditaSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditaSerieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoAddSerie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoEditaSerie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoAddSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoEditaSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("SÉRIES", jPanel2);

        areaTitulo.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        areaNumS.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        duracaoSeguidores.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel14.setText("Reviews mais recentes:");

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(3);
        jScrollPane3.setViewportView(jTextArea1);

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextArea2.setEditable(false);
        jTextArea2.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea2.setColumns(15);
        jTextArea2.setRows(3);
        jScrollPane4.setViewportView(jTextArea2);

        jTextArea3.setEditable(false);
        jTextArea3.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea3.setColumns(20);
        jTextArea3.setRows(3);
        jScrollPane5.setViewportView(jTextArea3);

        autor3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        autor3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        areaNota.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        areaSinopse.setEditable(false);
        areaSinopse.setBackground(new java.awt.Color(204, 204, 204));
        areaSinopse.setColumns(20);
        areaSinopse.setRows(5);
        jScrollPane6.setViewportView(areaSinopse);

        botaoPesquisa.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        botaoPesquisa.setText("PESQUISAR...");
        botaoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPesquisaActionPerformed(evt);
            }
        });

        botaoSegue.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        botaoSegue.setText("SEGUIR");
        botaoSegue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSegueActionPerformed(evt);
            }
        });

        botaoProx.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        botaoProx.setText("Proximo Episodio");
        botaoProx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoProxActionPerformed(evt);
            }
        });

        botaoAssistir.setText("Assistir");
        botaoAssistir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAssistirActionPerformed(evt);
            }
        });

        botaoDropa.setText("DEIXAR DE SEGUIR");
        botaoDropa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDropaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(areaTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(areaNumS, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(duracaoSeguidores, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(areaNota, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(autor3, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(autor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(autor2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6)
                    .addComponent(botaoPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoProx, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoAssistir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(botaoSegue, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoDropa, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(areaNota, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(areaTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(duracaoSeguidores, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(areaNumS, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botaoAssistir, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(autor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoPesquisa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4)
                    .addComponent(autor2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoSegue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoDropa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5)
                    .addComponent(autor3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoProx, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("BUSCAR SÉRIES", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane5)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoAddPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAddPerfilActionPerformed
   
        boolean existe = false;
            if(confirmaADM()){
                    String nome = JOptionPane.showInputDialog("Digite o Nome: ");
                    for (int i = 0; i < (adms.listaADM().size()); i++) {
                        if (nome.equals(adms.getADM(i).getNome())) {
                            JOptionPane.showMessageDialog(null, "Ja existe um adm com esse Nome.");
                            existe = true;
                            break;
                        }
                    }
                    if(!existe){
                        if(nome.equals("")){
                            JOptionPane.showMessageDialog(null, "O nome não pode ser vazio.");
                        }else{
                        String senha = JOptionPane.showInputDialog("Digite uma senha: ");
                        perfilADM = new Administrador(nome, senha);
                        adms.addADM(perfilADM);
                        atualizaJsonA(adms);
                        perfilAtivoU=null;
                        JOptionPane.showMessageDialog(null, "O perfil foi criado.");
                        }
                    }
                }else{
                    String nome = JOptionPane.showInputDialog("Digite o Nome: ");
                    for (int i = 0; i < (usuarios.listaUsuarios().size()); i++) {
                        if (nome.equals(usuarios.getUsuario(i).getNome())) {
                            JOptionPane.showMessageDialog(null, "Ja existe um usuario com esse Nome.");
                            existe = true;
                            break;
                        }
                    }
                    if(!existe){
                        if(nome.equals("")){
                            JOptionPane.showMessageDialog(null, "O nome não pode ser vazio.");
                        }else{
                            String nick = JOptionPane.showInputDialog("Digite o seu Nickname: ");
                            String bio = JOptionPane.showInputDialog("Digite um pouco sobre você: ");
                            String senha = JOptionPane.showInputDialog("Digite uma senha: ");
                            perfilU = new Usuario(nome, nick, bio, senha);
                            usuarios.addUsuario(perfilU);
                            atualizaJsonU(usuarios);
                            JOptionPane.showMessageDialog(null, "O perfil foi criado.");
                        }
        
                    }
                }        
    }//GEN-LAST:event_botaoAddPerfilActionPerformed

    private void botaoLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLoginActionPerformed
        if(confirmaADM()){
            String nome = JOptionPane.showInputDialog("Digite o Nome da Conta com a qual quer logar: ");
            for(int i = 0;i<adms.listaADM().size();i++){
                Administrador a =adms.listaADM().get(i);
                if(nome.equals(a.getNome())){
                    String senha = JOptionPane.showInputDialog("Digite a senha: ");
                    if(senha.equals(a.getSenha())){
                        perfilAtivoADM=a;
                        perfilAtivoU= null;
                        labelNick.setText(perfilAtivoADM.getNome());
                        jLabel8.setText("Monitoramento:");
                        jLabel9.setText("Esse programa possui, atualmente:");
                        jLabel10.setText("ADM's registrados:");
                        curioLivro.setText(perfilAtivoADM.qtdPerfis(adms.listaADM()));
                        jLabel2.setText("");
                        jLabel3.setText("");
                        curioFilme.setText("");
                        jLabel5.setText("");
                        jLabel6.setText("E ");
                        curioCalorias.setText(usuarios.getUsuario(0).qtdPerfis(usuarios.listaUsuarios()));
                        jLabel11.setText("usuários cadastrados.");
                        JOptionPane.showMessageDialog(rootPane, "Bem-vindo de volta, "+perfilAtivoADM.getNome());
                        jLabel1.setVisible(false);
                        jLabel4.setVisible(false);
                        botaoAddSerie.setVisible(true);
                        botaoEditaSerie.setVisible(true);
                        botaoSegue.setVisible(false);
                        botaoDropa.setVisible(false);
                        botaoPesquisa.setVisible(false);
                        botaoAssistir.setVisible(false);
                        botaoProx.setVisible(false);
                        atualizaTabela(usuarios,jTable1);
                        atualizaTabelaSeries(series,jTable2);
                        return;
                    }
                
                }
            }
            JOptionPane.showMessageDialog(rootPane, "Nao existe um ADM com este nome.");
            
        }else{
            String nome = JOptionPane.showInputDialog("Digite o Nome da Conta com a qual quer logar: ");
            for(int i = 0;i<usuarios.listaUsuarios().size();i++){
                Usuario u =usuarios.listaUsuarios().get(i);
                if(nome.equals(u.getNome())){
                    String senha = JOptionPane.showInputDialog("Digite a senha: ");
                    if(senha.equals(u.getSenha())){
                        perfilAtivoU= u;
                        perfilAtivoADM=null;
                        labelNick.setText(perfilAtivoU.getNick());
                        labelNome.setText(perfilAtivoU.getNome());
                        labelNumSeries.setText(String.valueOf(perfilAtivoU.listaSerie().size()));
                        labelNumEps.setText(String.valueOf(perfilAtivoU.getNumEps()));
                        labelNumHoras.setText(String.valueOf(perfilAtivoU.getNumHoras()));
                        jLabel7.setText("Series Seguidas");
                        jLabel12.setText("Episodios Assistidos");
                        jLabel13.setText("Minutos Assistidos");
                        labelBio.setText(perfilAtivoU.getBio());
                        jLabel8.setText("Enquanto isso...");
                        jLabel9.setText("Esse tempo é equivalente a:");
                        jLabel10.setText("Ler um livro de");
                        curioLivro.setText(perfilAtivoU.qtdPaginas());
                        jLabel2.setText("páginas.");
                        jLabel3.setText("Ver toda a Saga Senhor dos Anéis");
                        curioFilme.setText(perfilAtivoU.qtdFilme());
                        jLabel5.setText("vezes.");
                        jLabel6.setText("Queimar");
                        curioCalorias.setText(perfilAtivoU.qtdCalorias());
                        jLabel11.setText("calorias em caminhadas.");
                        jLabel1.setVisible(true);
                        jLabel4.setVisible(true);
                        botaoAddSerie.setVisible(false);
                        botaoEditaSerie.setVisible(false);
                        botaoPesquisa.setVisible(true);
                        JOptionPane.showMessageDialog(rootPane, "Bem-vindo de volta, "+perfilAtivoU.getNome());
                        return;
                    }
            }
            }
            JOptionPane.showMessageDialog(rootPane, "Nao existe um Usuario com este nome.");
        }
    }//GEN-LAST:event_botaoLoginActionPerformed

    private void botaoExcluiPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluiPerfilActionPerformed
        if(perfilAtivoADM!=null){
            for(int i =0;i<adms.listaADM().size();i++){
                if(adms.getADM(i)==perfilAtivoADM){
                        apagaMenu();
                        perfilAtivoADM=null;
                    adms.listaADM().remove(i);
                    atualizaJsonA(adms);
                }
            }
        }else if(perfilAtivoU!=null){
            for(int i =0;i<usuarios.listaUsuarios().size();i++){
                if(usuarios.getUsuario(i)==perfilAtivoU){
                    apagaMenu();
                    perfilAtivoU= null;
                    usuarios.listaUsuarios().remove(i);
                    atualizaJsonU(usuarios);
                }
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Não há perfil ativo para ser excluido. Faça o login para prosseguir.");
        }
    }//GEN-LAST:event_botaoExcluiPerfilActionPerformed

    private void botaoAddSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAddSerieActionPerformed
        String t = JOptionPane.showInputDialog("Digite o titulo dessa serie:");
        String s = JOptionPane.showInputDialog("Digite a sinopse:");
        Integer d;
        serie = new Serie(t, s);
        Integer tAux = Integer.parseInt(JOptionPane.showInputDialog("Quantas temporadas ha atualmente?"));
        for(int i =0;i<tAux;i++){
            temp = new Temporada();
            Integer nEps = Integer.parseInt(JOptionPane.showInputDialog("Quantas episodios tem a temporada "+(i+1)+"?"));
            for(int j =0;j<nEps;j++){
                t = JOptionPane.showInputDialog("Digite o nome do episódio:"+(j+1));
                s = JOptionPane.showInputDialog("Digite a sinopse:");
                d = Integer.parseInt(JOptionPane.showInputDialog("Digite a duração:"));
                ep = new Episodio(t,s,d);
                temp.addEp(ep);
            }
            serie.getTemporadas().add(temp);
        }
        series.addSerie(serie);
        atualizaJson(series);
        if(perfilAtivoADM!=null)
            atualizaTabelaSeries(series,jTable2);
            
    }//GEN-LAST:event_botaoAddSerieActionPerformed

    private void botaoEditaSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditaSerieActionPerformed
        String t = JOptionPane.showInputDialog("Digite o titulo dessa serie:");
        for(int i =0;i<series.listaSeries().size();i++){
            if(t.equals(series.listaSeries().get(i).getTitulo())){
                serie =series.listaSeries().get(i);
                Object[] options = { "Rem. Serie", "Add Temp"};
                int conf = JOptionPane.showOptionDialog(rootPane,"Que mudança deseja fazer?","Editar" , JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                switch(conf) {
                    case 0:
                        series.listaSeries().remove(serie);
                        break;
                    case 1:
                    temp = new Temporada();
                    for(int j =0;j<Integer.parseInt(JOptionPane.showInputDialog("Quantas episodios tem a temporada "+i+"?"));j++){
                        t = JOptionPane.showInputDialog("Digite o nome desse episódio:");
                        String s = JOptionPane.showInputDialog("Digite a sinopse:");
                        Integer d = Integer.parseInt(JOptionPane.showInputDialog("Digite a duração:"));
                        ep = new Episodio(t,s,d);
                        temp.addEp(ep);
                    }
                    serie.getTemporadas().add(temp);
                    break;
}
                        
            }else{
                JOptionPane.showMessageDialog(rootPane, "Não existe uma série com este nome.");
            }
        }
    }//GEN-LAST:event_botaoEditaSerieActionPerformed

    private void botaoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPesquisaActionPerformed
        String t =JOptionPane.showInputDialog("Digite o titulo dessa serie:");
        for(int i =0;i<series.listaSeries().size();i++){
            if(t.equals(series.listaSeries().get(i).getTitulo())){
                s = series.listaSeries().get(i);
                areaTitulo.setText(s.getTitulo());
                areaSinopse.setText(s.getSinopse());
                areaNumS.setText(String.valueOf(s.getSeguidores()));
                duracaoSeguidores.setText("Seguidores.");
                areaNota.setText(String.valueOf(s.calculaNota(s.listaReviews()))+"/5");
                switch(s.listaReviews().size()){
                    case 0:{
                    break;
                    }
                    case 1:{
                    autor1.setText(s.listaReviews().get(0).getAutor());
                    jTextArea1.setText(s.listaReviews().get(0).getOpiniao());
                    break;
                    }
                    case 2:{
                    autor1.setText(s.listaReviews().get(1).getAutor());
                    jTextArea1.setText(s.listaReviews().get(1).getOpiniao());
                    autor2.setText(s.listaReviews().get(0).getAutor());
                    jTextArea2.setText(s.listaReviews().get(0).getOpiniao());
                    break;
                    }
                    default:{
                    autor1.setText(s.listaReviews().get(s.listaReviews().size()-1).getAutor());
                    jTextArea1.setText(s.listaReviews().get(s.listaReviews().size()-1).getOpiniao());
                    autor2.setText(s.listaReviews().get(s.listaReviews().size()-2).getAutor());
                    jTextArea2.setText(s.listaReviews().get(s.listaReviews().size()-2).getOpiniao());
                    autor3.setText(s.listaReviews().get(s.listaReviews().size()-3).getAutor());
                    jTextArea3.setText(s.listaReviews().get(s.listaReviews().size()-3).getOpiniao());
                    break;
                    }
                }
                

                botaoDropa.setVisible(true);
                botaoProx.setVisible(true);
                botaoSegue.setVisible(true);
                    
                
            }
        }
    }//GEN-LAST:event_botaoPesquisaActionPerformed

    private void botaoSegueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSegueActionPerformed
        for(int i=0;i<perfilAtivoU.listaSerie().size();i++){
            if(perfilAtivoU.listaSerie().get(i).getTitulo().equals(areaTitulo.getText())){
                JOptionPane.showMessageDialog(rootPane, "Voce ja segue essa serie");
                return;
            }
        }
        for(int i=0;i<usuarios.listaUsuarios().size();i++){
            if(usuarios.listaUsuarios().get(i).getNome().equals(perfilAtivoU.getNome())){
                usuarios.listaUsuarios().get(i).listaSerie().add(s);
                for(int j=0;j<series.listaSeries().size();j++){
                    if(series.listaSeries().get(j).getTitulo().equals(s.getTitulo())){
                        series.listaSeries().get(j).setSeguidores(series.listaSeries().get(j).getSeguidores()+1);
                        atualizaJson(series);
                    }
                }
                atualizaJsonU(usuarios);
                labelNumSeries.setText(String.valueOf(Integer.parseInt(labelNumSeries.getText())+1));
                areaNumS.setText(String.valueOf(Integer.parseInt(areaNumS.getText())+1));
                return;
            }
            
        }
    }//GEN-LAST:event_botaoSegueActionPerformed

    private void botaoDropaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDropaActionPerformed
        for(int i=0;i<usuarios.listaUsuarios().size();i++){
            if(usuarios.listaUsuarios().get(i).getNome().equals(perfilAtivoU.getNome())){
                for(int j=0;j<usuarios.listaUsuarios().get(i).listaSerie().size();j++){
                    if(usuarios.listaUsuarios().get(i).listaSerie().get(j).getTitulo().equals(areaTitulo.getText())){
                        usuarios.listaUsuarios().get(i).listaSerie().remove(j);
                        atualizaJsonU(usuarios);
                        for(int k=0;k<series.listaSeries().size();k++){
                            if(series.listaSeries().get(k).getTitulo().equals(s.getTitulo())){                                
                                series.listaSeries().get(k).setSeguidores(+1);
                                atualizaJson(series);
                            }
                        }
                        labelNumSeries.setText(String.valueOf(Integer.parseInt(labelNumSeries.getText())-1));
                        areaNumS.setText(String.valueOf(Integer.parseInt(areaNumS.getText())-1));
                        JOptionPane.showMessageDialog(rootPane, "Voce deixou de seguir essa serie.");
                        return;
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Voce nao segue essa serie");
                        return;
                    }
                }
            }
        }
    }//GEN-LAST:event_botaoDropaActionPerformed

    private void botaoProxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoProxActionPerformed
        for(int i=0;i<usuarios.listaUsuarios().size();i++){
            if(usuarios.listaUsuarios().get(i).getNome().equals(perfilAtivoU.getNome())){
                for(int j=0;j<usuarios.listaUsuarios().get(i).listaSerie().size();j++){
                    if(usuarios.listaUsuarios().get(i).listaSerie().get(j).getTitulo().equals(areaTitulo.getText())){
                        for(int k=0;k<usuarios.listaUsuarios().get(i).listaSerie().get(j).getTemporadas().size();k++){
                            for(int e=0;e<usuarios.listaUsuarios().get(i).listaSerie().get(j).getTemporadas().get(k).listaEpisodios().size();e++){
                                if(usuarios.listaUsuarios().get(i).listaSerie().get(j).getTemporadas().get(k).listaEpisodios().get(e).isAssistido()==false){
                                    ep  = usuarios.listaUsuarios().get(i).listaSerie().get(j).getTemporadas().get(k).listaEpisodios().get(e);
                                    areaTitulo.setText(ep.getTitulo());
                                    areaSinopse.setText(ep.getSinopse());
                                    areaNumS.setText(String.valueOf(ep.getDuracao()));
                                    duracaoSeguidores.setText("min.");
                                    areaNota.setText(String.valueOf(ep.calculaNota(ep.listaReviews()))+"/10");
                                    switch(ep.listaReviews().size()){
                                        case 0:
                                            break;
                                        
                                        case 1:
                                            autor1.setText(ep.listaReviews().get(0).getAutor());
                                            jTextArea1.setText(ep.listaReviews().get(0).getOpiniao());
                                            break;
                                        
                                        case 2:
                                            autor1.setText(ep.listaReviews().get(1).getAutor());
                                            jTextArea1.setText(ep.listaReviews().get(1).getOpiniao());
                                            autor2.setText(ep.listaReviews().get(0).getAutor());
                                            jTextArea2.setText(ep.listaReviews().get(0).getOpiniao());
                                            break;
                                        
                                        default:
                                            autor1.setText(ep.listaReviews().get(ep.listaReviews().size()-1).getAutor());
                                            jTextArea1.setText(ep.listaReviews().get(ep.listaReviews().size()-1).getOpiniao());
                                            autor2.setText(ep.listaReviews().get(ep.listaReviews().size()-2).getAutor());
                                            jTextArea2.setText(ep.listaReviews().get(ep.listaReviews().size()-2).getOpiniao());
                                            autor3.setText(ep.listaReviews().get(ep.listaReviews().size()-3).getAutor());
                                            jTextArea3.setText(ep.listaReviews().get(ep.listaReviews().size()-3).getOpiniao());
                                            break;
                                        
                                    }
                                    botaoDropa.setVisible(false);
                                    botaoSegue.setVisible(false);
                                    botaoAssistir.setVisible(true);
                                    return;
                                }
                            }
                        }
                    
                    }
                }
            }
        }
    }//GEN-LAST:event_botaoProxActionPerformed

    private void botaoAssistirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAssistirActionPerformed
        for(int i=0;i<usuarios.listaUsuarios().size();i++){
            if(usuarios.listaUsuarios().get(i).getNome().equals(perfilAtivoU.getNome())){
                for(int j=0;j<usuarios.listaUsuarios().get(i).listaSerie().size();j++){
                    if(usuarios.listaUsuarios().get(i).listaSerie().get(j).getTitulo().equals(s.getTitulo())){
                        for(int k=0;k<usuarios.listaUsuarios().get(i).listaSerie().get(j).getTemporadas().size();k++){
                            for(int e=0;e<usuarios.listaUsuarios().get(i).listaSerie().get(j).getTemporadas().get(k).listaEpisodios().size();e++){
                                if(usuarios.listaUsuarios().get(i).listaSerie().get(j).getTemporadas().get(k).listaEpisodios().get(e).isAssistido()==false){
                                    usuarios.listaUsuarios().get(i).listaSerie().get(j).getTemporadas().get(k).listaEpisodios().get(e).setAssistido(true);
                                    usuarios.listaUsuarios().get(i).setNumEps(usuarios.listaUsuarios().get(i).getNumEps()+1);
                                    usuarios.listaUsuarios().get(i).setNumHoras(usuarios.listaUsuarios().get(i).getNumHoras()+(ep.getDuracao()));
                                    atualizaJsonU(usuarios);
                                    labelNumHoras.setText(String.valueOf(usuarios.listaUsuarios().get(i).getNumHoras()));
                                    labelNumEps.setText(String.valueOf(usuarios.listaUsuarios().get(i).getNumEps()));
                                    curioLivro.setText(usuarios.listaUsuarios().get(i).qtdPaginas());
                                    curioFilme.setText(usuarios.listaUsuarios().get(i).qtdFilme());
                                    curioCalorias.setText(usuarios.listaUsuarios().get(i).qtdCalorias());
                                    String op = JOptionPane.showInputDialog("O que achou do episodio?:");
                                    int nota=-1;
                                    while(nota<0||nota>10){
                                        nota = Integer.parseInt(JOptionPane.showInputDialog("De uma nota(0 a 10):"));
                                        if(nota<0||nota>10)
                                            JOptionPane.showMessageDialog(rootPane, "Nota Invalida");
                                    }
                                    Review r = new Review(usuarios.listaUsuarios().get(i).getNick(),op,nota);
                                    for(int s=0;s<series.listaSeries().size();s++){
                                        if(series.listaSeries().get(s).getTitulo().equals(usuarios.listaUsuarios().get(i).listaSerie().get(j).getTitulo())){
                                            series.listaSeries().get(s).getTemporadas().get(k).listaEpisodios().get(e).listaReviews().add(r);
                                            atualizaJson(series);
                                        }
                                    }
                                    botaoAssistir.setVisible(false);
                                    return;
                                }
                                
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_botaoAssistirActionPerformed
    
    public void apagaMenu(){
        labelNick.setText("");
        labelNome.setText("");
        labelNumSeries.setText("");
        labelNumEps.setText("");
        labelNumHoras.setText("");
        labelBio.setText("");
        jLabel8.setText("");
        jLabel9.setText("");
        jLabel10.setText("");
        curioLivro.setText("");
        jLabel2.setText("");
        jLabel3.setText("");
        curioFilme.setText("");
        jLabel5.setText("");
        jLabel6.setText("");
        curioCalorias.setText("");
        jLabel11.setText("");
        jLabel7.setText("");
        jLabel12.setText("");
        jLabel13.setText("");
    }

    public void limpaTabelaSerie(JTable tabela) {
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        for (; model.getRowCount() > 0; model.removeRow(model.getRowCount() - 1));
    }
    
    public void imprimeTabelaSeries(ConjuntoSeries series, JTable tabela) {
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        int i = series.listaSeries().size();
        int j = 0;
        while (j <= i - 1) {
            int numS = series.getSerie(j).getSeguidores();
            String nome = series.getSerie(j).getTitulo();
            int numE=0;
            for(int k=0;k<series.listaSeries().get(j).getTemporadas().size();k++){
                numE+=series.getSerie(k).getTemporadas().get(k).listaEpisodios().size();
            }
            float nota = series.getSerie(j).calculaNota(series.getSerie(j).listaReviews());
            Object[] row = {nome, numE, numS, nota};
            model.addRow(row);
            j++;
        }
    }
    
    public void atualizaTabelaSeries( ConjuntoSeries series,JTable tabela) {
        limpaTabelaSerie(tabela);
        imprimeTabelaSeries(series, tabela);
    }
    
    private void atualizaJson(ConjuntoSeries series) {
        BancoDeSeries s = new BancoDeSeries(series);
        try {
            s.escreveArquivo();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
    
    public void limpaTabela(JTable tabela) {
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        for (; model.getRowCount() > 0; model.removeRow(model.getRowCount() - 1));
    }
    
    public void imprimeTabela(ConjuntoUsuarios u, JTable tabela) {
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        int i = u.listaUsuarios().size();
        int j = 0;
        while (j <= i - 1) {
            int numS = u.getUsuario(j).listaSerie().size();
            String nome = u.getUsuario(j).getNome();
            Object[] row = {nome, numS};
            model.addRow(row);
            j++;
        }
    }
    
    public void atualizaTabela( ConjuntoUsuarios c,JTable tabela) {
        limpaTabela(tabela);
        imprimeTabela(c, tabela);
    }
    
     private void atualizaJsonU(ConjuntoUsuarios u) {
        BancoDeUsuarios bu = new BancoDeUsuarios(u);
        try {
            bu.escreveArquivo();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
     
    public boolean confirmaADM(){
        Object[] options = { "Sim", "Nao" };
        int conf = JOptionPane.showOptionDialog(rootPane,"Seu Perfil é um Admin?","Tipo de Perfil" , JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        
        if(conf==0){
            String id = JOptionPane.showInputDialog("Insira a id de acesso.");
            if(id.equals("81M0F2UF4OXF369LFY1TBF97P"))
                return true;
            
        }
        return false;          
    }
            
    private void atualizaJsonA(ConjuntoADM ca) {
        BancoDeADM a = new BancoDeADM(ca);
        try {
            a.escreveArquivo();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel areaNota;
    private javax.swing.JLabel areaNumS;
    private javax.swing.JTextArea areaSinopse;
    private javax.swing.JLabel areaTitulo;
    private javax.swing.JLabel autor1;
    private javax.swing.JLabel autor2;
    private javax.swing.JLabel autor3;
    private javax.swing.JButton botaoAddPerfil;
    private javax.swing.JButton botaoAddSerie;
    private javax.swing.JButton botaoAssistir;
    private javax.swing.JButton botaoDropa;
    private javax.swing.JButton botaoEditaSerie;
    private javax.swing.JButton botaoExcluiPerfil;
    private javax.swing.JButton botaoLogin;
    private javax.swing.JButton botaoPesquisa;
    private javax.swing.JButton botaoProx;
    private javax.swing.JButton botaoSegue;
    private javax.swing.JLabel curioCalorias;
    private javax.swing.JLabel curioFilme;
    private javax.swing.JLabel curioLivro;
    private javax.swing.JLabel duracaoSeguidores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JLabel labelBio;
    private javax.swing.JLabel labelNick;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelNumEps;
    private javax.swing.JLabel labelNumHoras;
    private javax.swing.JLabel labelNumSeries;
    // End of variables declaration//GEN-END:variables
}
